{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8984243,"sourceType":"datasetVersion","datasetId":5410371}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-30T10:54:09.675854Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import os\nimport logging\nimport warnings\nfrom catboost import CatBoostClassifier\nimport matplotlib.pyplot as plt\nimport sklearn.neural_network as nn\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.metrics import (\n    matthews_corrcoef, accuracy_score, f1_score, precision_score\n)\n\nwarnings.filterwarnings(action=\"ignore\")\nos.listdir(\"/kaggle/input/nasa-nearest-earth-objects-1910-2024\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_path = \"/kaggle/input/nasa-nearest-earth-objects-1910-2024/nearest-earth-objects(1910-2024).csv\"\ndf = pd.read_csv(data_path, index_col=\"neo_id\")\ndf.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Type conversion for is_hazardous.\ndf[\"is_hazardous\"] = df[\"is_hazardous\"].astype(str)\n\n#FALSE represents 0 & TRUE represents 1 in the neo-dataset.\ndf[\"is_hazardous\"].replace({\"False\": 0, \"True\": 1}, inplace=True)\n\n#EARTH represents 1 in the neo-dataset.\ndf[\"orbiting_body\"].replace(\"Earth\", 1, inplace=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"col_name = df.columns.tolist()\ncol_name = col_name[1:]\nneo = df[col_name]\nneo.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Saving the processed dataset.\nneo.to_csv(\"..\\kaggle\\input\\nasa-nearest-earth-objects-1910-2024\\neo_2024.csv\", index=False)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# !pip install zenml\n# !zenml init\n\n# from zenml import step, pipeline\n\n# def \n\n\n\n\n\n\n\n\n\n\n\n\n","metadata":{},"execution_count":null,"outputs":[]}]}